#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Copyright (c) 2010-2015 Tuukka Turto
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

"""
Herculeum is a dungeon adventure in the spirit of Nethack and Rogue.

Usage:
  herculeum [--ui=MODE] [--log-level=LEVEL] [--start-level=NAME]
  herculeum (-l | --license)
  herculeum (-h | --help)
  herculeum (-v | --version)

Options:
  -h --help            Show this screen.
  -l --license         Show license.
  -v --version         Show version.
  --ui=<mode>          User interface to use (qt or curses) [default: qt]
  --log-level=<level>  Log level to use [default: none]
  --start-level=<name> Starting level [default: upper catacombs]

"""
import hy  # noqa

from pyherc.aspects import set_logger
from pyherc.version import PYHERC_VERSION
from docopt import docopt
import logging

arguments = docopt(__doc__, version='Herculeum ' + PYHERC_VERSION)
set_logger(arguments['--log-level'])

from herculeum.application import Application

from herculeum.ui.gui import QtUserInterface, QtControlsConfiguration
from herculeum.ui.gui import QtSurfaceManager
import herculeum.ui.gui.resources  # noqa

try:
    from herculeum.ui.text import CursesUserInterface
    from herculeum.ui.text import CursesControlsConfiguration
    from herculeum.ui.text import CursesSurfaceManager
except:
    print('Curses user interface is not available')


def process_command_line(arguments):
    """
    Process command line options
    """
    log_levels = {'none': 'none',
                  'debug': logging.DEBUG,
                  'info': logging.INFO,
                  'warning': logging.WARNING,
                  'error': logging.ERROR,
                  'critical': logging.CRITICAL}

    log_level = log_levels[arguments['--log-level']]
    ui_mode = arguments['--ui']
    start_level = arguments['--start-level']
    if not start_level:
        start_level = 'first gate'

    return (log_level, ui_mode, start_level)

if __name__ == "__main__":
    app = Application()

    if arguments['--license']:
        print('Copyright (c) 2010-2015 Tuukka Turto')
        print('')
        print('Permission is hereby granted, free of charge, to any person obtaining a copy')
        print('of this software and associated documentation files (the "Software"), to deal')
        print('in the Software without restriction, including without limitation the rights')
        print('to use, copy, modify, merge, publish, distribute, sublicense, and/or sell')
        print('copies of the Software, and to permit persons to whom the Software is')
        print('furnished to do so, subject to the following conditions:')
        print('') 
        print('The above copyright notice and this permission notice shall be included in')
        print('all copies or substantial portions of the Software.')
        print('') 
        print('THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR')
        print('IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,')
        print('FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE')
        print('AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER')
        print('LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,')
        print('OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN')
        print('THE SOFTWARE.')
    else:

        log_level, ui_mode, start_level = process_command_line(arguments)

        app.log_level = log_level

        if ui_mode == 'qt':
            user_interface = QtUserInterface(app)
            surface_manager = QtSurfaceManager()
            controls_configuration = QtControlsConfiguration()
        else:
            user_interface = CursesUserInterface(app)
            surface_manager = CursesSurfaceManager()
            controls_configuration = CursesControlsConfiguration()

        user_interface.show_splash_screen()
        app.start_logging()
        app.load_configuration(controls_configuration,
                               surface_manager)
        app.config.start_level = start_level

        app.run(user_interface)
